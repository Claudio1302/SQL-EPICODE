-- USE SAKILA;
-- Esercizio 1 Identificate tutti i clienti che non hanno effettuato nessun noleggio a gennaio 2006. 
SELECT DISTINCT
		CONCAT(CU.FIRST_NAME, ' ', CU.LAST_NAME) NOMINATIVO
FROM CUSTOMER CU
LEFT JOIN RENTAL RE
USING (CUSTOMER_ID)
WHERE RE.RENTAL_DATE IS NULL
OR RE.RENTAL_DATE < '2006-02-01';

-- Esercizio 2 Elencate tutti i film che sono stati noleggiati più di 10 volte nell’ultimo quarto del 2005.
SELECT 
		FI.TITLE TITOLO_FILM,
        COUNT(RE.RENTAL_DATE) NUMERO_NOLEGGI
FROM FILM FI
INNER JOIN INVENTORY INV
ON FI.FILM_ID = INV.FILM_ID
INNER JOIN RENTAL RE
ON INV.INVENTORY_ID = RE.INVENTORY_ID
WHERE RENTAL_DATE BETWEEN '2005-10-01' AND '2005-12-31'
GROUP BY FI.TITLE
HAVING NUMERO_NOLEGGI > 10
ORDER BY NUMERO_NOLEGGI;

-- Esercizio 3 Trovate il numero totale di noleggi effettuati il giorno 1/1/2006.
SELECT 
		COUNT(*)
FROM RENTAL
WHERE RENTAL_DATE = '2006-01-01';
 
-- Esercizio 4 Calcolate la somma degli incassi generati nei weekend (sabato e domenica). 
SELECT 
		SUM(PA.AMOUNT) INCASSO_WEEKEND
FROM RENTAL RE
INNER JOIN PAYMENT PA
USING (RENTAL_ID)
WHERE DAYNAME(PA.PAYMENT_DATE) IN ('SATURDAY', 'SUNDAY');
		
-- Esercizio 5 Individuate il cliente che ha speso di più in noleggi. 
SELECT 
		CU.CUSTOMER_ID ID_CLIENTE,
        CONCAT(CU.FIRST_NAME, ' ', LAST_NAME) NOMINATIVO_CLIENTE,
        SUM(PA.AMOUNT) TOTALE_SPESA
FROM CUSTOMER CU
INNER JOIN PAYMENT PA
USING (CUSTOMER_ID)
GROUP BY ID_CLIENTE
ORDER BY TOTALE_SPESA
LIMIT 1;

-- Esercizio 6 Elencate i 5 film con la maggior durata media di noleggio.
SELECT
		FI.TITLE TITOLO_FILM,
        ROUND(AVG(DATEDIFF(RETURN_DATE, RENTAL_DATE)),1) DURATA_MEDIA_NOLEGGIO
FROM FILM FI
INNER JOIN INVENTORY INV
ON FI.FILM_ID = INV.FILM_ID
INNER JOIN RENTAL RE
ON INV.INVENTORY_ID = RE.INVENTORY_ID
GROUP BY FI.TITLE
ORDER BY DURATA_MEDIA_NOLEGGIO DESC
LIMIT 5;

-- Esercizio 7 Calcolate il tempo medio tra due noleggi consecutivi da parte di un cliente. 
SELECT 
		CU.CUSTOMER_ID ID_CLIENTE,
        CONCAT(CU.FIRST_NAME, ' ', CU.LAST_NAME) NOMINATIVO_CLIENTE,
        AVG(DATEDIFF(RE.RETURN_DATE, RE.RENTAL_DATE)) TEMPO_MEDIO_TRA_NOLEGGI
FROM CUSTOMER CU
INNER JOIN RENTAL RE
USING (CUSTOMER_ID)
GROUP BY CU.CUSTOMER_ID
ORDER BY TEMPO_MEDIO_TRA_NOLEGGI;

-- Esercizio 8 Individuate il numero di noleggi per ogni mese del 2005. 
SELECT 
        MONTH (RENTAL_DATE) MESE,
        COUNT(RENTAL_ID) CONTEGGIO_NOLEGGI
FROM RENTAL 
WHERE YEAR(RENTAL_DATE) = '2005'
GROUP BY MESE;

-- Esercizio 9 Trovate i film che sono stati noleggiati almeno due volte lo stesso giorno. 
SELECT
		FI.TITLE TITOLO_FILM,
        RE.RENTAL_DATE DATA_NOLEGGIO,
        COUNT(RENTAL_ID) NUMERO_NOLEGGI
FROM RENTAL RE
INNER JOIN INVENTORY INV
ON RE.INVENTORY_ID = INV.INVENTORY_ID
INNER JOIN FILM FI
ON INV.FILM_ID = FI.FILM_ID
GROUP BY TITOLO_FILM, DATA_NOLEGGIO
HAVING COUNT(RENTAL_ID) >= 2;

-- Esercizio 10 Calcolate il tempo medio di noleggio.
SELECT 
		AVG(DATEDIFF(RETURN_DATE, RENTAL_DATE)) MEDIA_NOLEGGIO
FROM RENTAL
WHERE RETURN_DATE IS NOT NULL;